{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources": {
        "MessageSQS": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "RedrivePolicy": {
                    "deadLetterTargetArn": {
                        "Fn::GetAtt": [
                            "MessagesDLQ",
                            "Arn"
                        ]
                    },
                    "maxReceiveCount": 2
                },
				"ReceiveMessageWaitTimeSeconds" : 20,
				"QueueName": {"Fn::Join": ["",[{"Ref": "AWS::StackName"},"-MessageSQS"]]}
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "1c7fbd12-3671-4161-9dd2-d7a49b2fcaef"
                }
            }
        },
        "Databus": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "TopicName": "databus",
                "Subscription": [
                    {
                        "Endpoint": {
                            "Fn::GetAtt": [
                                "MessageSQS",
                                "Arn"
                            ]
                        },
                        "Protocol": "sqs"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "f2008b55-8df7-4971-9e44-d0e51b27bff9"
                }
            }
        },
        "Sources": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "ClientName",
                        "AttributeType": "S"
                    }
                ],
                "BillingMode": "PROVISIONED",
                "KeySchema": [
                    {
                        "AttributeName": "ClientName",
                        "KeyType": "HASH"
                    }
                ],
                "TableName": {"Fn::Join": ["",[{"Ref": "AWS::StackName"},"-TrustedSources"]]},
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": 1,
                    "WriteCapacityUnits": 1
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "5c390071-1aa6-4ee3-8c51-eaca7e9696c0"
                }
            }
        },
        "MessagesDLQ": {
            "Type": "AWS::SQS::Queue",
            "Properties": {},
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "0a6e4da8-00b8-48e0-9041-da46007de5e3"
                }
            }
        },
        "Messages": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "Source",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "Timestamp",
                        "AttributeType": "N"
                    }
                ],
                "BillingMode": "PROVISIONED",
                "KeySchema": [
                    {
                        "AttributeName": "Source",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "Timestamp",
                        "KeyType": "RANGE"
                    }
                ],
                "TableName": {"Fn::Join": ["",[{"Ref": "AWS::StackName"},"-Messages"]]},
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": 1,
                    "WriteCapacityUnits": 1
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "838b48b4-81db-4b0d-8a06-477f4cb19f3c"
                }
            }
        },
        "MessageProcessorTrigger": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "Properties": {
                "BatchSize": 10,
                "Enabled": true,
                "EventSourceArn": {"Fn::GetAtt": ["MessageSQS", "Arn"]},
                "FunctionName": {
                    "Fn::GetAtt": [
                        "MessageProcessor",
                        "Arn"
                    ]
                }
            },
			"DependsOn": ["MessageProcessor", "MessageProcessorRole"],
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "1d34bd87-ff28-4a41-ac05-802e8174ab38"
                }
            }
        },
        "MessageProcessor": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "MessageProcessorRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "S3Bucket": "simple-ms-messenger-lambda-functions",
                    "S3Key": "governor-processor.zip"
                },
                "Runtime": "nodejs8.10",
                "Timeout": 25,
				"Environment": {
					"Variables": {
						"SOURCES_TABLE": {"Fn::Join": ["",[{"Ref": "AWS::StackName"},"-TrustedSources"]]},
						"MESSAGES_TABLE": {"Fn::Join": ["",[{"Ref": "AWS::StackName"},"-Messages"]]},
						"SNS_TOPIC": {"Ref": "Databus"}
					}
				}
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3921a3d5-abcc-4502-b8c4-3288d8a27276"
                }
            },
            "DependsOn": [
                "Databus",
                "Sources",
                "Messages"
            ]
        },
        "MessageProcessorRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    {
                        "Ref": "MessageProcessorPolicy"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "9208e05c-5c52-4470-b30e-ec1f6237df87"
                }
            }
        },
        "MessageResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "RESTAPI",
                        "RootResourceId"
                    ]
                },
                "RestApiId": {
                    "Ref": "RESTAPI"
                },
                "PathPart": "messages"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6ab085f0-c46d-40f2-b1fd-180c3a48e773"
                }
            }
        },
        "RESTAPI": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": {"Fn::Join": ["",[{"Ref": "AWS::StackName"},"-GovernorAPI"]]}
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "cc60a062-3dc6-40c4-a245-72a1fcc9d560"
                }
            }
        },
        "GetMessages": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {
                    "Ref": "RESTAPI"
                },
                "ResourceId": {
                    "Ref": "MessageResource"
                },
                "HttpMethod": "GET",
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetMessagesLambda.Arn}/invocations"
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6b898ca4-da5f-4181-9fb9-bd6ae0114454"
                }
            },
            "DependsOn": [
                "GetMessagesLambda"
            ]
        },
		"OptionsMethod": {
			"Type": "AWS::ApiGateway::Method",
			"Properties": {
				"AuthorizationType": "NONE",
				"RestApiId": {
					"Ref": "RESTAPI"
				},
				"ResourceId": {
					"Ref": "MessageResource"
				},
				"HttpMethod": "OPTIONS",
				"Integration": {
					"IntegrationResponses": [{
						"StatusCode": "200",
						"ResponseParameters": {
							"method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
							"method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
							"method.response.header.Access-Control-Allow-Origin": "'*'"
						},
						"ResponseTemplates": {
							"application/json": ""
						}
					}],
					"PassthroughBehavior": "WHEN_NO_MATCH",
					"RequestTemplates": {
						"application/json": "{'statusCode': 200}"
					},
					"Type": "MOCK"
				},
				"MethodResponses": [{
					"StatusCode": "200",
					"ResponseModels": {
						"application/json": "Empty"
					},
					"ResponseParameters": {
						"method.response.header.Access-Control-Allow-Headers": false,
						"method.response.header.Access-Control-Allow-Methods": false,
						"method.response.header.Access-Control-Allow-Origin": false
					}
				}]
			}
		},
        "GetMessagesLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "GetMessagesRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "S3Bucket": "simple-ms-messenger-lambda-functions",
                    "S3Key": "governor-getMessages.zip"
                },
                "Runtime": "nodejs8.10",
                "Timeout": 25,
				"Environment": {
					"Variables": {
						"MESSAGES_TABLE": {"Fn::Join": ["",[{"Ref": "AWS::StackName"},"-Messages"]]}
					}
				}
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "e68d24ea-c0c4-4a81-831d-662464303d13"
                }
            },
            "DependsOn": [
                "Messages"
            ]
        },
        "GetMessagesRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    {
                        "Ref": "GetMessagesPolicy"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "76d1bef1-eb48-4d59-9431-5bb98847c648"
                }
            }
        },
        "MessageProcessorPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
					"Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": ["dynamodb:GetItem", "dynamodb:PutItem", "dynamodb:Scan"],
                            "Resource": {"Fn::Join": ["",["arn:aws:dynamodb:",{"Ref": "AWS::Region"},":",{"Ref": "AWS::AccountId"},":table/",{"Ref": "Messages"}]]}
                        },
                        {
                            "Effect": "Allow",
                            "Action": "dynamodb:Scan",
                            "Resource": {"Fn::Join": ["",["arn:aws:dynamodb:",{"Ref": "AWS::Region"},":",{"Ref": "AWS::AccountId"},":table/",{"Ref": "Sources"}]]}
                        },
                        {
                            "Effect": "Allow",
                            "Action": "SQS:*",
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": "SNS:*",
                            "Resource": "*"
                        },
						{
							"Effect": "Allow",
							"Action": [
								"logs:PutLogEvents",
								"logs:CreateLogStream",
								"logs:CreateLogGroup"
							],
							"Resource": "*"
						}
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "e268698a-c0f6-42b0-b6cc-a06a75eb49c7"
                }
            }
        },
        "GetMessagesPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
					"Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "dynamodb:Scan",
                            "Resource": {"Fn::Join": ["",["arn:aws:dynamodb:",{"Ref": "AWS::Region"},":",{"Ref": "AWS::AccountId"},":table/",{"Ref": "Messages"}]]}
                        }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "92241441-4f72-41a4-a505-59076d380b6f"
                }
            }
        },
		"QueuePolicy": {
			"Type" : "AWS::SQS::QueuePolicy",
			"Properties": {
				"PolicyDocument": {
				    "Version": "2012-10-17",
				    "Statement": [{
					   "Effect": "Allow",
					   "Principal": "*",
					   "Action": "sqs:ReceiveMessage",
					   "Resource": {"Fn::GetAtt": ["MessageSQS", "Arn"]}
				    },
					{
						"Effect": "Allow",
						"Principal": {
							"AWS": "*"
						},
						"Action": "sqs:SendMessage",
						"Resource": {"Fn::GetAtt": ["MessageSQS", "Arn"]},
						"Condition": {
							"ArnEquals": {
								"aws:SourceArn": {"Ref": "Databus"}
							}
						}
					}]
				},
				"Queues": [{"Ref": "MessageSQS"}]
			}
		},
		"APIGetPermission": {
			"Type": "AWS::Lambda::Permission",
			"Properties": {
				"FunctionName": { "Fn::GetAtt": [ "GetMessagesLambda", "Arn" ] },
				"Action": "lambda:InvokeFunction",
				"Principal": "apigateway.amazonaws.com",
				"SourceArn": { "Fn::Join": [ "", [
					"arn:aws:execute-api:",
					{ "Ref": "AWS::Region" }, ":",
					{ "Ref": "AWS::AccountId" }, ":",
					{ "Ref": "RESTAPI" },
					"/*/*/*"
				] ] }
			}
		},
		"WebAccessBucket": {
			"Type" : "AWS::S3::Bucket",
			"Properties": {
				"BucketName": {"Fn::Join": ["",[{"Ref": "AWS::StackName"},"-web-access"]]},
				"WebsiteConfiguration": {
					"IndexDocument": "index.html"
				}
			}	
		},
		"PublicWebAccessPolicy": {
			"Type": "AWS::S3::BucketPolicy",
			"Properties": {
				"Bucket": {"Fn::Join": ["",[{"Ref": "AWS::StackName"},"-web-access"]]},
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": "*",
							"Action": "s3:GetObject",
							"Resource": {"Fn::Join": ["",[{"Fn::GetAtt": ["WebAccessBucket", "Arn"]},"/*"]]}
						}
					]
				}
			}
		}
    },
	"Outputs" : {
		"DatabusARN" : {
		  "Description" : "DatabusARN",
		  "Value" :  { "Ref" : "Databus" },
		  "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-Databus" }}
		}
	}
}